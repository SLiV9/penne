const SCREEN_SIZE: u32 = 160;
const DRAW_COLORS: &u16 = 0x14;
const FRAMEBUFFER: &[6400]u8 = 0xa0;

fn pixel(x: i32, y: i32)
{
    // The byte index into the framebuffer that contains (x, y).
    var idx = ((y as u32 * SCREEN_SIZE + x as u32) >> 2) as usize;

    // Calculate the bits within the byte that corresponds to our position.
    var shift = (x as u8 & 0b11) << 1;
    var mask = 0b11 << shift;

    // Use the first DRAW_COLOR as the pixel color.
    var palette_color = (DRAW_COLORS & 0b1111) as u8;
    if palette_color == 0
    {
        // Transparent
        goto end;
    }
    var color = (palette_color - 1) & 0b11;

    // Write to the framebuffer.
    FRAMEBUFFER[idx] = (color << shift) | (FRAMEBUFFER[idx] & !mask);

    end:
}
