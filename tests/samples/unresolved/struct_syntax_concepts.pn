word64 Position
{
	x: i32,
	y: i32,
}

struct SmallVec
{
	buffer_is_array_with_fixed_len: [100]i32,
	data_is_pointer_to_endless_array: &[]i32,
	data_is_pointer_to_explicit_endless_array: &[...]i32,
	length: usize,
	position: Position,
}

fn foo()
{
	var struct_on_stack: SmallVec;
	var struct_on_heap: &SmallVec;
	var word_on_stack: Position;
	var copy_of_word = word_on_stack;
}

fn bar(slice: []i32,
	array_pointer_with_runtime_len: &[]i32,
	array_view_with_explicit_runtime_len: [:]i32,
	array_pointer_with_explicit_runtime_len: &[:]i32,
	endless_array_view: ([]i32),
	explicit_endless_array_view: ([...]i32),
	endless_array_pointer: &[...]i32,
	small_vec_view: SmallVec,
	small_vec_explicit_view: (SmallVec),
	small_vec_pointer: &SmallVec,
	word_by_value: Position,
	word_by_explicit_view: (Position),
	word_by_pointer: &Position,
	slice_of_words: []Position,
	array_pointer_of_small_vec: &[]SmallVec,
	dummy: i32);
