Features:
	✔	Forward-only goto's @done (2020-10-18 14:46)
	✔	Pointers with automatic dereference @done (2022-09-20 14:56)
	☐	If-statement-based pattern matching
	☐	Tagged unions for error handling

Functionality:
	✔	Void functions @done (2022-09-20 16:13)
	✔	Fixed-length stack-based arrays @done (2022-09-03 21:22)
		✔	Array length operator @done (2022-09-04 11:48)
	✔	Multidimensional arrays @done (2022-09-19 17:28)
	✔	Pointers with automatic dereference @done (2022-09-20 14:56)
		☐	Think about (disallowing) cast between pointer and integer
	✔	Pass array by const-reference (slice) by default @done (2022-09-04 18:06)
		☐	A [3]i32 parameter is typechecked as [3]i32 but implemented as []i32
		✔	In extern functions, use pointers instead of slice structs @done (2022-09-08 12:09)
	☐	String literals
		☐	\u{NN} through \u{NNNNN}
	✔	Byte string literals @done (2022-09-22 15:22)
		✔	\xNN @done (2022-09-22 15:22)
	✔	FFI @done (2022-09-22 15:22)
		✔	extern C fn(); @done (2022-09-05 18:38)
		✔	pub extern C fn() {...} @done (2022-09-05 16:51)
	☐	Floats
	✔	Other integer sizes @done (2022-09-05 14:30)
		☐	Think about size of usize
		✔	Different generated integer sizes for WASM and x86 @done (2022-09-23 21:56)
		☐	Think about natural stack alignment
		☐	Think about isize
		☐	Difference between usize and upointer
	☐	Strong enums
	☐	Optional
		☐	int types with niches
	✔	Function calls @done (2021-01-16 18:03)
	✔	Function parameters @done (2021-01-16 18:03)
	☐	Structs
	☐	Vec and String
	✘	Explicit mutable parameters @cancelled (2022-09-03 16:04)
	☐	Modules
		☐	pragma once
		☐	Public vs private
	☐	stdlib
		☐	print()
		☐	fopen(), fclose()
	☐	Compile-time string and byte-array inclusion from file

Syntactic sugar:
	☐	Pre-block scope-merging variable declarations
		var i = 0,
		{
			...
		}
		// i is not in scope here
	✔	C-style string literal concatenation @done (2021-07-10 13:26)

Syntax errors:
	These are syntax errors because they would cause errors during IR generation
	✔	Goto statement without corresponding label @done (2020-10-18 14:44)
	✔	Duplicate label @done (2020-10-18 14:44)
	✔	Non-goto statement after if without braces @done (2020-10-18 15:15)
	✔	Loop statement anywhere except at the end of a block @done (2020-10-18 15:23)
	✔	Function argument number mismatch @done (2021-01-17 16:03)
	✔	Function return value cannot be array or large struct @done (2022-10-12 15:45)

Linting errors:
	These are lints because they only cause runtime problems.
	☐	Unreachable code
	✔	Loop as only statement in an if-branch @done (2021-01-09 12:45)
	☐	Functions with side effects in if-statement conditions
	☐	Var declaration with undefined value in some/all branches
	☐	Non-extern function without body
	☐	Returning pointer, slice or view of temporary

Usability:
	✔	Error recovery @done (2022-10-09 22:24)
		☐	Better error recovery for unmatched parentheses
	✔	Switch to custom error printed with ariadne @done (2022-10-09 22:24)
	☐	Debug symbols in the resulting IR/executable
	☐	Add helpful note when trying to jump backwards
		☐	Similarly, add note when referencing variable declared later
		☐	Add note when referencing variable from an inner scope
	✔	Error codes @done (2022-10-10 14:23)
	✔ Match expected error codes in tests @done (2022-10-10 14:23)
	☐	Generate error index by formatting literate-style samples with ansi2html
	✔	Color default terminal output differently from LLVM errors @done (2022-09-07 15:22)
	☐	Allow goto to skip var declaration if short-lived (skip_shortlived_var.pn)
	☐	Add options to disable color and unicode symbols in errors

Documentation:
	✔ Move tests from lib.rs to *tests/* @done (2022-10-04 16:44)
	☐	Reference of all current and unstable language features
	☐	Changelog.md
	☐	Tags for crates.io
	☐	High def logo

Development:
	☐	Cleanup main.rs
	☐	WASM-4 pull request

Theory:
	☐	Prove Turing completeness
